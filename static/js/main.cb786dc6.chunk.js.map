{"version":3,"sources":["pages/home.tsx","components/nav/myRouter.tsx","components/nav/DesktopNav.tsx","utils/mergeClasses.ts","components/nav/mobileDropdown.tsx","components/nav/mobileNav.tsx","components/nav/navBar.tsx","hooks/useOutsideAlerter.ts","components/nav/nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","className","src","alt","MyRouter","props","children","path","DesktopNav","to","mergeClasses","classes","join","MobileDropdown","onClick","handleToggle","base","open","getButtonColor","x-show","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","MobileNav","location","useLocation","pathname","undefined","NavBar","ref","callback","useState","mobileOpen","setMobileOpen","menuRef","useRef","navRef","useEffect","current","classList","add","remove","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","Nav","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb786dc6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Home() {\n  return (\n    <div className=\"container\">\n      <img src=\"favicon.ico\" alt=\"Ben McLean\"/>\n    </div>\n  );\n}\n","import { Route, Switch } from \"react-router\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Home } from \"../../pages/home\";\nimport { PropsWithChildren } from \"react\";\n\nexport function MyRouter(props: PropsWithChildren<{}>) {\n  return (\n    <BrowserRouter>\n      {props.children}\n      <Switch>\n        <Route path=\"/resume\">Resume</Route>\n        <Route path=\"/minesweeper\">Minesweeper</Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nexport function DesktopNav() {\n  return (\n    <div className=\"flex space-x-7\">\n      <div>\n        <Link to=\"/\" className=\"flex items-center py-4 px-2\">\n          <img src=\"favicon.ico\" alt=\"Logo\" className=\"h-8 w-8 mr-2\" />\n          <span className=\"font-semibold text-gray-500 text-lg hover:text-blue-500 transition duration-300\">\n            Ben McLean\n          </span>\n        </Link>\n      </div>\n      <div className=\"hidden md:flex items-center space-x-1\">\n        <Link\n          to=\"/resume\"\n          className=\"py-4 px-2 text-gray-500 font-semibold hover:text-blue-500 transition duration-300\"\n        >\n          Resume\n        </Link>\n        <Link\n          to=\"/minesweeper\"\n          className=\"py-4 px-2 text-gray-500 font-semibold hover:text-blue-500 transition duration-300\"\n        >\n          Minesweeper\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/**\n * Purpose of this funciton is just to semantically\n * declare what I'm doing with classes.join\n * @param classes List of css classes to merge.\n *\n * @returns css class array seperated by space\n */\n\nexport function mergeClasses(...classes: Array<string>): string {\n  return classes.join(\" \");\n}\n","import { mergeClasses } from \"../../utils/mergeClasses\";\n\ninterface Props {\n  handleToggle: VoidFunction;\n  open: boolean;\n}\n\nexport function MobileDropdown(props: Props) {\n  function getButtonColor(): string {\n    const base = \"w-6 h-6 transition duration-300\";\n\n    if (props.open) return mergeClasses(base, \"text-white\");\n    else return mergeClasses(base, \"text-gray-500\");\n  }\n\n  return (\n    <div className=\"md:hidden flex items-center\">\n      <button\n        className=\"outline-none mobile-menu-button\"\n        onClick={props.handleToggle}\n      >\n        <svg\n          className={getButtonColor()}\n          x-show=\"!showMenu\"\n          fill=\"none\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path d=\"M4 6h16M4 12h16M4 18h16\"></path>\n        </svg>\n      </button>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport function MobileNav() {\n  const location = useLocation();\n\n  return (\n    <ul className=\"bg-gray-700\">\n      <li className={location.pathname === \"/resume\" ? \"active\" : undefined}>\n        <Link\n          to=\"resume\"\n          className=\"block text-sm px-6 py-4 text-white hover:bg-blue-500 transition duration-300 font-semibold\"\n        >\n          Resume\n        </Link>\n      </li>\n      <li\n        className={location.pathname === \"/minesweeper\" ? \"active\" : undefined}\n      >\n        <Link\n          to=\"minesweeper\"\n          className=\"block text-sm px-6 py-4 text-white hover:bg-blue-500 transition duration-300 font-semibold\"\n        >\n          Minesweeper\n        </Link>\n      </li>\n    </ul>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport { DesktopNav } from \"./DesktopNav\";\nimport { MobileDropdown } from \"./mobileDropdown\";\nimport { MobileNav } from \"./mobileNav\";\nimport { useOutsideAlterter } from \"../../hooks/useOutsideAlerter\";\n\n/**\n * Source:\n * https://www.section.io/engineering-education/creating-a-responsive-navigation-bar-using-tailwind-css-and-javascript/\n *\n * I was learning tailwind while making this site so I referenced a blog\n *\n * @returns\n */\n\nexport function NavBar() {\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const menuRef = useRef<HTMLDivElement>(null);\n  const navRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (mobileOpen) menuRef.current?.classList.add(\"hidden\");\n    else menuRef.current?.classList.remove(\"hidden\");\n  }, [mobileOpen]);\n\n  function forceClose() {\n    setMobileOpen(false);\n  }\n\n  useOutsideAlterter(navRef, forceClose);\n\n  return (\n    <div>\n      <nav className=\"bg-gray-800 shadow-lg\" ref={navRef}>\n        <div className=\"mx-auto px-4\">\n          <div className=\"flex justify-between\">\n            <DesktopNav />\n            <MobileDropdown\n              handleToggle={() => setMobileOpen((open) => !open)}\n              open={mobileOpen}\n            />\n          </div>\n        </div>\n        <div className=\"md:hidden hidden mobile-menu\" ref={menuRef}>\n          <MobileNav />\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import { MutableRefObject, useEffect } from \"react\";\n\n/**\n * Hook to call function when ref is clicked outside of\n *\n * @param ref - ref to check \"insideness\" of\n * @param callback - callback for when click is outside of ref\n */\nexport function useOutsideAlterter(\n  ref: MutableRefObject<null | HTMLElement | SVGElement>,\n  callback: VoidFunction\n) {\n  useEffect(() => {\n    function handleClickOutside(event: TouchEvent) {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callback();\n      }\n    }\n\n    document.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  });\n}\n","import { MyRouter } from \"./myRouter\";\nimport React from \"react\";\nimport { NavBar } from \"./navBar\";\n\nexport default function Nav() {\n  return (\n    <MyRouter>\n      <NavBar />\n    </MyRouter>\n  );\n}\n","import Nav from \"./components/nav/nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}